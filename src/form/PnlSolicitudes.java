package form;

import Fonts.Fuentes;
import java.awt.FontFormatException;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import api.ClienteApartado;
import api.ClienteEquipos;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import models.Apartado;
import models.Equipo;

public class PnlSolicitudes extends javax.swing.JPanel {

    Fuentes tipoDeFuentes;
    private DefaultTableModel modelo;
    private ClienteApartado api;
    private ClienteEquipos apiEquipo;
    private List<Apartado> data;

    /**
     * Creates new form Panel1
     */
    public PnlSolicitudes() throws FontFormatException {
        initComponents();
        api = new ClienteApartado();
        modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new Object[]{"ID", "MATRÍCULA", "GRUPO", "HORARIO", "FECHA(a/m/d)", "ESTADO", "N CONFIRMACIÓN", "N DEVOLUCIÓN"});
        tipoDeFuentes = new Fuentes();
        jLabelSolicitudesPrestamos.setFont(tipoDeFuentes.fuente(tipoDeFuentes.quickBold, 0, 17));
        tablaSolicitudes.setFont(tipoDeFuentes.fuente(tipoDeFuentes.quickMedium, 0, 15));
        tablaSolicitudes.setModel(modelo);
        fetchAparts();
        validarId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabelSolicitudesPrestamos = new javax.swing.JLabel();
        panelLista = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnCancel = new rsbuttom.RSButtonMetro();
        btnUpdate = new rsbuttom.RSButtonMetro();
        txtId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaSolicitudes = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(java.awt.Color.white);

        jLabelSolicitudesPrestamos.setBackground(new java.awt.Color(127, 145, 232));
        jLabelSolicitudesPrestamos.setFont(new java.awt.Font("Roboto Lt", 1, 18)); // NOI18N
        jLabelSolicitudesPrestamos.setForeground(java.awt.Color.white);
        jLabelSolicitudesPrestamos.setText("                                                                     Solicitudes Préstamos");
        jLabelSolicitudesPrestamos.setOpaque(true);

        panelLista.setBackground(java.awt.Color.white);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCancel.setText("Cancelar solicitud");
        btnCancel.setFont(new java.awt.Font("Quicksand-Regular.ttf", 1, 12)); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 160, -1));

        btnUpdate.setText("Actualizar lista");
        btnUpdate.setFont(new java.awt.Font("Quicksand-Regular.ttf", 1, 12)); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 160, -1));

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeyPressed(evt);
            }
        });
        jPanel1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 80, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Id de préstamo");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        jPanel4.setLayout(new java.awt.BorderLayout());

        tablaSolicitudes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Estado", "Còdigo de Confirmación", "Código de Devolución ", "Nombre", "Apellidos", "Matrícula", "Aula", "Edificio", "Horario", "Grupo", "Serial"
            }
        ));
        tablaSolicitudes.setRowHeight(25);
        tablaSolicitudes.setRowSelectionAllowed(false);
        tablaSolicitudes.setSelectionBackground(new java.awt.Color(204, 204, 255));
        jScrollPane2.setViewportView(tablaSolicitudes);
        if (tablaSolicitudes.getColumnModel().getColumnCount() > 0) {
            tablaSolicitudes.getColumnModel().getColumn(1).setPreferredWidth(110);
            tablaSolicitudes.getColumnModel().getColumn(2).setPreferredWidth(120);
        }

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout panelListaLayout = new javax.swing.GroupLayout(panelLista);
        panelLista.setLayout(panelListaLayout);
        panelListaLayout.setHorizontalGroup(
            panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelListaLayout.setVerticalGroup(
            panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelSolicitudesPrestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelSolicitudesPrestamos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (txtId.getText().length() >= 1) {
            for (Apartado d : data) {
                if (d.getIdApartado() == Integer.parseInt(txtId.getText())) {
                    updateStatusApartado(Integer.parseInt(txtId.getText()));
                    updateStatusEquipo(d.getIdApartado());
                    break;
                }else{
                    
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe ingresar un id", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        resetTable();
        fetchAparts();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyPressed

    }//GEN-LAST:event_txtIdKeyPressed

    private void validarId() {
        txtId.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent ke) {
                if (ke.getKeyChar() >= '0' && ke.getKeyChar() <= '9' || ke.getKeyChar() == ke.VK_BACK_SPACE) {
                    txtId.setEditable(true);
                } else {
                    txtId.setEditable(false);
                }
            }
        });
    }

    private void resetTable() {
        modelo.setRowCount(0);
    }

    private void updateStatusEquipo(int id){
        Equipo oneEquipo = getOneEquipo(id);
        oneEquipo.setEstado("DISPONIBLE");
        apiEquipo.update(oneEquipo);
    }
    
    private Equipo getOneEquipo(int id){
        return apiEquipo.getOneByID(Equipo.class, id);
    }
    
    private void updateStatusApartado(int id) {
        Apartado ap = getOne(id);
        ap.setEstado("CANCELADO");
        if (api.update(ap) != "") {
            JOptionPane.showMessageDialog(null, "Registro cancelado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            resetTable();
            fetchAparts();
            txtId.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Error al cancelar", "Aviso", JOptionPane.ERROR_MESSAGE);
        }

    }

    private Apartado getOne(int id) {
        return api.getOneByID(Apartado.class, id);
    }

    private void fetchAparts() {
        data = api.getAll();
        for (Apartado d : data) {
            if (d.getEstado().equals("PENDIENTE")) {
                modelo.addRow(new Object[]{d.getIdApartado(), d.getMatricula(), d.getGrupo(),
                    d.getHoraInicio() + " - " + d.getHoraFinal(), d.getFecha(), d.getEstado(),
                    d.getCodigoConfirmacion(), d.getCodigoDevolucion()});
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rsbuttom.RSButtonMetro btnCancel;
    private rsbuttom.RSButtonMetro btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelSolicitudesPrestamos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelLista;
    private javax.swing.JTable tablaSolicitudes;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
